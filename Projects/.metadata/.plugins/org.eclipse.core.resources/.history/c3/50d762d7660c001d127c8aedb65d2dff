package com.business.repository;
//Libraries used here
import java.sql.Connection;
import java.sql.PreparedStatement;
//import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
//Classes used here
import com.business.model.userprofiles;
import com.business.util.connectionUtil;


public class userprofileRepositoryImpl implements userprofilesRepository{
	/**
	 * creates a list of all user profiles on database.
	 */
	
	public List<userprofiles> findAllUserprofiles() {
		Connection conn = null;
		Statement stmt = null;
		ResultSet set = null;
		
		List<userprofiles> allusers = new ArrayList<>();
		
		final String SQL = "select * from userprofiles";
		
		try {
			conn = connectionUtil.getNewConnection();
			stmt = conn.createStatement();
			set = stmt.executeQuery(SQL);
			while(set.next()) {
				userprofiles user = new userprofiles(
						set.getInt(1),
						set.getString(2),
						set.getString(3),
						set.getBoolean(4));
				allusers.add(user);
										
			}
		}catch(SQLException e) {
			e.printStackTrace();
		}finally {
			try {
				conn.close();
				stmt.close();
				set.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return allusers;
	}
	/**
	 * Uploads a new user profile to the database.
	 */
	@Override
	public void newprofile(userprofiles User) {
		Connection conn = null;
		
		PreparedStatement stmt = null;
		
		final String SQL = "insert into userprofiles values(default, ?, ? , false)";
		
		try {
			conn =connectionUtil.getNewConnection();
			stmt = conn.prepareStatement(SQL);
			
			stmt.setString(1,User.getUser_name());
			stmt.setString(2, User.getPassword());
			stmt.execute();
		}catch(SQLException e) {
			e.printStackTrace();
		}finally {
			try {
				conn.close();
				stmt.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
	}
	/**
	 * Looks for user by username and returns the userprofile.
	 */
	@Override
	public userprofiles findbyUserName(String username) {
		userprofiles userSearch = null;
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet set = null;
		final String SQL = "select * from userprofiles where username = ?";
		
		try {
			conn=connectionUtil.getNewConnection();
			stmt = conn.prepareStatement(SQL);
			stmt.setString(1, username);
			set = stmt.executeQuery();
			
			if(set.next()) {
				userSearch = new userprofiles(
						set.getInt(1),
						set.getString(2),
						set.getString(3),
						set.getBoolean(4));
			}
		}catch(SQLException e){
			e.printStackTrace();
		}finally {
			try {
				conn.close();
				stmt.close();
				set.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return userSearch;
	}
	/**
	 * Checks if an input password for an input username matches the password recorded 
	 * on the database. If the passwords do not match returns false.
	 */
	@Override
	public boolean checkPassword(String username, String password) {
		userprofilesRepository plchldr = new userprofileRepositoryImpl();
		return plchldr.findbyUserName(username).getPassword() == password;
	}
	
}


